{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\alessandramontanher\\\\Desktop\\\\ponto-hr\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\alessandramontanher\\\\Desktop\\\\ponto-hr\\\\frontend\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport getCurrentDate from './utils/currentdate.js';\n\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef(); // Remember the latest callback.\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]); // Set up the interval.\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nfunction App() {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        id = _useState2[0],\n        setId = _useState2[1];\n\n  let _useState3 = useState(getCurrentDate()),\n      _useState4 = _slicedToArray(_useState3, 2),\n      datetime = _useState4[0],\n      setDatetime = _useState4[1];\n\n  useInterval(() => {\n    setDatetime(getCurrentDate());\n  }, 1000);\n\n  function handleSubmit() {}\n\n  function handleChange() {}\n\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"ID\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"id\",\n    value: id,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"CURRENT DATETIME\"), React.createElement(\"span\", {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, datetime), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"REGISTER\"))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\alessandramontanher\\Desktop\\ponto-hr\\frontend\\src\\App.js"],"names":["React","useState","getCurrentDate","useInterval","callback","delay","savedCallback","useRef","useEffect","current","tick","id","setInterval","clearInterval","App","setId","datetime","setDatetime","handleSubmit","handleChange"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,cAAP,MAA2B,wBAA3B;;AAEA,SAASC,WAAT,CAAqBC,QAArB,EAA+BC,KAA/B,EAAsC;AACpC,QAAMC,aAAa,GAAGC,MAAM,EAA5B,CADoC,CAGpC;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdF,IAAAA,aAAa,CAACG,OAAd,GAAwBL,QAAxB;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT,CAJoC,CAQpC;;AACAI,EAAAA,SAAS,CAAC,MAAM;AACd,aAASE,IAAT,GAAgB;AACdJ,MAAAA,aAAa,CAACG,OAAd;AACD;;AACD,QAAIJ,KAAK,KAAK,IAAd,EAAoB;AAClB,UAAIM,EAAE,GAAGC,WAAW,CAACF,IAAD,EAAOL,KAAP,CAApB;AACA,aAAO,MAAMQ,aAAa,CAACF,EAAD,CAA1B;AACD;AACF,GARQ,EAQN,CAACN,KAAD,CARM,CAAT;AASD;;AAED,SAASS,GAAT,GAAe;AAAA,oBACOb,QAAQ,EADf;AAAA;AAAA,QACNU,EADM;AAAA,QACFI,KADE;;AAAA,mBAEiBd,QAAQ,CAACC,cAAc,EAAf,CAFzB;AAAA;AAAA,MAERc,QAFQ;AAAA,MAEEC,WAFF;;AAIbd,EAAAA,WAAW,CAAC,MAAI;AACdc,IAAAA,WAAW,CAACf,cAAc,EAAf,CAAX;AACD,GAFU,EAER,IAFQ,CAAX;;AAIA,WAASgB,YAAT,GAAuB,CAEtB;;AAED,WAASC,YAAT,GAAuB,CAEtB;;AAED,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAED,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,IAAxB;AAA6B,IAAA,KAAK,EAAEP,EAApC;AAAwC,IAAA,QAAQ,EAAEQ,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF,EAKE;AAAM,IAAA,KAAK,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBH,QAAtB,CALF,EAOE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,CADF,CADJ,CADF;AAeD;;AAED,eAAeF,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport getCurrentDate from './utils/currentdate.js';\n\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nfunction App() {\n  const [id, setId] = useState();\n  let [datetime, setDatetime] = useState(getCurrentDate());\n\n  useInterval(()=>{\n    setDatetime(getCurrentDate());\n  }, 1000);\n\n  function handleSubmit(){\n\n  }\n\n  function handleChange(){\n\n  }\n\n  return (\n    <div className=\"container\">\n        <div className=\"content\">\n          <form onSubmit={handleSubmit}>\n            <label>ID</label>\n            <input type=\"text\" name=\"id\" value={id} onChange={handleChange}/>\n\n            <label>CURRENT DATETIME</label>\n            <span align=\"center\">{datetime}</span>\n\n            <button type=\"submit\">REGISTER</button>\n          </form>\n        </div>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}